@.k = constant [25 x i8] c"else statement evaluated\00"
@.k1 = constant [31 x i8] c"if statement in else evaluated\00"
declare i32 @printf(i8*, ...) #1
@.1arg_str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
 
declare i32 @puts(i8*)
define i32 @main () 
 {%.va = alloca i32
store i32 10, i32* %.va
%.t1 = load i32, i32* %.va
%.t2 = icmp eq i32 %.t1, 10
br i1 %.t2, label %label1, label %label2
label1:
store i32 11, i32* %.va
%.t3 = load i32, i32* %.va
%.t4 = icmp eq i32 %.t3, 11
br i1 %.t4, label %label4, label %label5
label4:
call i32 (i8*, ...) @printf (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.1arg_str, i32 0, i32 0), i32 %.t3) 
br label %label6
label5:
br label %label6
label6:
br label %label3
label2:
br label %label3
label3:
%.vb = alloca i32
store i32 12, i32* %.vb
%.t5 = load i32, i32* %.vb
%.t6 = icmp eq i32 %.t5, 10
br i1 %.t6, label %label7, label %label8
label7:
call i32 (i8*, ...) @printf (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.1arg_str, i32 0, i32 0), i32 %.t5) 
br label %label9
label8:
%.t7 = icmp eq i32 %.t5, 12
br i1 %.t7, label %label12, label %label13
label12:
call i32 (i8*, ...) @printf (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.1arg_str, i32 0, i32 0), i32 %.t5) 
br label %label9
label13:
br label %label9
label9:
%.t8 = icmp eq i32 %.t3, %.t5
br i1 %.t8, label %label15, label %label16
label15:
call i32 (i8*, ...) @printf (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.1arg_str, i32 0, i32 0), i32 %.t3) 
br label %label17
label16:
%.t9 = getelementptr [25 x i8], [25 x i8]*@.k, i64 0, i64 0
call i32 @puts (i8* %.t9) 
%.t10 = getelementptr [25 x i8], [25 x i8]*@.k, i64 0, i64 0
%.t11 = icmp eq i8* %.t9, %.t10
br i1 %.t11, label %label18, label %label19
label18:
%.t12 = getelementptr [31 x i8], [31 x i8]*@.k1, i64 0, i64 0
call i32 @puts (i8* %.t12) 
br label %label20
label19:
br label %label20
label20:
br label %label17
label17:
ret i32 0 
}
