/* Generated By:JJTree&JavaCC: Do not edit this line. monaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface monaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VAR = 11;
  /** RegularExpression Id. */
  int CONST = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int CLASS = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int BOOL = 16;
  /** RegularExpression Id. */
  int T_FLOAT = 17;
  /** RegularExpression Id. */
  int VOID = 18;
  /** RegularExpression Id. */
  int MAIN = 19;
  /** RegularExpression Id. */
  int BREAK = 20;
  /** RegularExpression Id. */
  int IF = 21;
  /** RegularExpression Id. */
  int ELSE = 22;
  /** RegularExpression Id. */
  int ELSEIF = 23;
  /** RegularExpression Id. */
  int PRINT = 24;
  /** RegularExpression Id. */
  int IN = 25;
  /** RegularExpression Id. */
  int TRUE = 26;
  /** RegularExpression Id. */
  int FALSE = 27;
  /** RegularExpression Id. */
  int WHILE = 28;
  /** RegularExpression Id. */
  int FOR = 29;
  /** RegularExpression Id. */
  int GET = 30;
  /** RegularExpression Id. */
  int GETCHAR = 31;
  /** RegularExpression Id. */
  int LENGTH = 32;
  /** RegularExpression Id. */
  int STRINGLEN = 33;
  /** RegularExpression Id. */
  int INSERT = 34;
  /** RegularExpression Id. */
  int STRING = 35;
  /** RegularExpression Id. */
  int SKIP_mona = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int SEMIC = 38;
  /** RegularExpression Id. */
  int COLON = 39;
  /** RegularExpression Id. */
  int LCBR = 40;
  /** RegularExpression Id. */
  int RCBR = 41;
  /** RegularExpression Id. */
  int LBR = 42;
  /** RegularExpression Id. */
  int RBR = 43;
  /** RegularExpression Id. */
  int LSBR = 44;
  /** RegularExpression Id. */
  int RSBR = 45;
  /** RegularExpression Id. */
  int DOT = 46;
  /** RegularExpression Id. */
  int ASSIGN = 47;
  /** RegularExpression Id. */
  int PLUS_SIGN = 48;
  /** RegularExpression Id. */
  int MINUS_SIGN = 49;
  /** RegularExpression Id. */
  int MUL = 50;
  /** RegularExpression Id. */
  int DIV = 51;
  /** RegularExpression Id. */
  int POW = 52;
  /** RegularExpression Id. */
  int MOD = 53;
  /** RegularExpression Id. */
  int LOG_NEG = 54;
  /** RegularExpression Id. */
  int OR = 55;
  /** RegularExpression Id. */
  int AND = 56;
  /** RegularExpression Id. */
  int EQUAL = 57;
  /** RegularExpression Id. */
  int NOT_EQUAL = 58;
  /** RegularExpression Id. */
  int LESS_THAN = 59;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 60;
  /** RegularExpression Id. */
  int GREATER_THAN = 61;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 62;
  /** RegularExpression Id. */
  int DIGIT = 63;
  /** RegularExpression Id. */
  int CHAR = 64;
  /** RegularExpression Id. */
  int NUM = 65;
  /** RegularExpression Id. */
  int FLOAT = 66;
  /** RegularExpression Id. */
  int IDENTIFIER = 67;
  /** RegularExpression Id. */
  int QUOTED_STRING = 68;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/#\"",
    "\"#/\"",
    "<token of kind 10>",
    "\"var\"",
    "\"const\"",
    "\"return\"",
    "\"class\"",
    "\"int\"",
    "\"bool\"",
    "\"float\"",
    "\"void\"",
    "\"main\"",
    "\"break\"",
    "\"if\"",
    "\"else\"",
    "\"else_if\"",
    "\"print\"",
    "\"in\"",
    "\"true\"",
    "\"false\"",
    "\"while\"",
    "\"for\"",
    "\".get\"",
    "\".getChar\"",
    "\".length\"",
    "\".len\"",
    "\".insert\"",
    "\"String\"",
    "\"skip\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"%\"",
    "\"~\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "<DIGIT>",
    "<CHAR>",
    "<NUM>",
    "<FLOAT>",
    "<IDENTIFIER>",
    "<QUOTED_STRING>",
  };

}
